plugins {
    id 'application'
    id 'org.springframework.boot' version '3.1.5'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'org.openjfx.javafxplugin' version '0.0.10'
    id 'org.beryx.runtime' version '1.13.1' 
    id "io.freefair.lombok" version "6.3.0"
}
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        url "https://jitpack.io"
    }
}

ext {
    junitVersion = '5.8.1'
}


tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

application {
    mainModule = 'com.github.jvegaf.musikbox.app'
    mainClass = 'com.github.jvegaf.musikbox.app.Main'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

javafx {
    modules = ['javafx.controls', 'javafx.fxml', 'javafx.graphics', 'javafx.media', 'javafx.base']
}

configurations.all {
    exclude group: 'xml-apis'
    exclude group: 'com.google.code.findbugs', module: 'jsr305'
}

dependencies {
    implementation 'org.controlsfx:controlsfx:11.1.1'
    implementation 'org.hibernate:hibernate-core:5.6.4.Final'
    implementation 'org.springframework:spring-orm:5.3.15'
    implementation 'org.xerial:sqlite-jdbc:3.36.0.3'
    implementation 'org.springframework:spring-context-support:5.3.15'
    implementation 'io.github.cdimascio:dotenv-java:2.2.3'
    implementation 'org.jsoup:jsoup:1.14.3'
    implementation 'net.jthink:jaudiotagger:3.0.1'
    implementation 'com.google.code.gson:gson:2.8.9'
    implementation 'org.reflections:reflections:0.10.2'
    implementation 'fr.brouillard.oss:cssfx:11.5.0'
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'net.rgielen:javafx-weaver-spring-boot-starter:1.3.0'
    implementation 'org.apache.logging.log4j:log4j-core:2.17.1'
    implementation 'com.google.guava:guava:31.0.1-jre'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.1'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.13.1'
    implementation 'commons-io:commons-io:2.11.0'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
    useJUnitPlatform()
}

runtime {
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    modules = ['java.naming', 'java.xml']
    additive = true

    launcher {
        noConsole = true
    }

    jpackage {
        // Uncomment and adjust the following line if your runtime task is configured to generate images for multiple platforms
        // targetPlatformName = "mac"

        def currentOs = org.gradle.internal.os.OperatingSystem.current()
        def imgType = currentOs.windows ? 'ico' : currentOs.macOsX ? 'icns' : 'png'
        imageOptions += ['--icon', "src/main/resources/musikbox.$imgType"]
        installerOptions += ['--resource-dir', "src/main/resources"]
        installerOptions += ['--vendor', 'Acme Corporation']

        if(currentOs.windows) {
            installerOptions += ['--win-per-user-install', '--win-dir-chooser', '--win-menu', '--win-shortcut']
        }
        else if (currentOs.linux) {
            installerOptions += ['--linux-package-name', 'musikbox','--linux-shortcut']
        }
        else if (currentOs.macOsX) {
            installerOptions += ['--mac-package-name', 'musikbox']
        }
    }
}